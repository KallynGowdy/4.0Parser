using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace KallynGowdy.SyntaxTree
{
	/// <summary>
	/// Defines an interface that represents an element of syntax.
	/// </summary>
	public interface ISyntaxElement
	{
		/// <summary>
		/// Gets the <see cref="SyntaxTree"/> that this element belongs to.
		/// </summary>
		SyntaxTree Tree { get; }

		/// <summary>
		/// Gets whether the node represents a language construct that was not actually parsed from the source.
		/// Missing nodes are generated by the parser in error scenarios to represent constructs that should have been present in the source code
		/// in order to compile successfully but were actually missing.
		/// </summary>
		bool IsMissing { get; }

		/// <summary>
		/// Gets the list of syntax trivia that leads this syntax element.
		/// </summary>
		SyntaxTriviaList LeadingTrivia { get; }

		/// <summary>
		/// Gets the list of syntax trivia that trails this syntax element.
		/// </summary>
		SyntaxTriviaList TrailingTrivia { get; }

		/// <summary>
		/// Gets the representation of this element's span of text.
		/// </summary>
		TextSpan Span { get; }
	}
}
